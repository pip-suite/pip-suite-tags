{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/data/TagDataService.ts","src/data/index.ts","src/index.ts","src/rest/TagResources.ts","src/tag_list/TagList.ts","temp/pip-suite-tags-html.min.js"],"names":[],"mappings":"AAAA;;;;;;ACIA;IAGI,iBACY,OAA8B,EAC9B,UAAwC;QAEhD,UAAU,CAAC;QAHH,YAAO,GAAP,OAAO,CAAuB;QAC9B,eAAU,GAAV,UAAU,CAA8B;QAJ5C,aAAQ,GAAW,MAAM,CAAC;IAOlC,CAAC;IAEM,2BAAS,GAAhB;QACI,IAAI,MAAc,CAAC;QACnB,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QAEzE,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEM,0BAAQ,GAAf,UAAgB,MAAW,EAAE,eAA2C,EAAE,aAAoC;QAC1G,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QACvE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,eAAe,EAAE,aAAa,CAAC,CAAC;IAC/F,CAAC;IAEM,4BAAU,GAAjB,UAAkB,MAAW,EAAE,IAAS,EAAE,eAAqC,EAAE,aAAoC;QACjH,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,aAAa,CAAC,CAAC;IAC/F,CAAC;IAEM,4BAAU,GAAjB,UAAkB,MAAW,EAAE,IAAS,EAAE,eAAqC,EAAE,aAAoC;QACjH,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,aAAa,CAAC,CAAC;IACjG,CAAC;IAEL,cAAC;AAAD,CAjCA,AAiCC,IAAA;AAED;IAGI;IAAgB,CAAC;IAEV,8BAAI,GAAX,UACI,OAA8B,EAC9B,UAAwC;QAExC,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QACrD,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAEL,sBAAC;AAAD,CAlBA,AAkBC,IAAA;AAED,OAAO;KACF,MAAM,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC,CAAC;KACvC,QAAQ,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;;;;AC7D7C,4BAA0B;AAC1B,6BAA2B;;;;ACD3B,8BAA2B;AAC3B,+BAA6B;AAC7B,kBAAgB;AAGhB,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE;IAClB,aAAa;IACb,YAAY;IACZ,YAAY;CACnB,CAAC,CAAC;;ACTH,4BAA4B,eAAuC;IAC/D,eAAe,CAAC,gBAAgB,CAAC,MAAM,EAAE,yBAAyB,EAC9D,EAAE,QAAQ,EAAE,WAAW,EAAE,EACzB;QACI,MAAM,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;KAC5B,CACJ,CAAC;AACN,CAAC;AAED,OAAO;KACF,MAAM,CAAC,aAAa,EAAE,EAAE,CAAC;KACzB,MAAM,CAAC,kBAAkB,CAAC,CAAC;;ACXhC,CAAC;IAOG;QAOI,2BACI,MAAiB,EACjB,QAAgC;YAIhC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YACjC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QACtC,CAAC;QAEO,qCAAS,GAAjB,UAAkB,KAAa;YAC3B,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YAC1D,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YACzB,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;YACvC,MAAM,CAAC,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,MAAM,CAAC;QAC3C,CAAC;QAEM,sCAAU,GAAjB,UAAkB,OAAuB;YACrC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;YAC1C,CAAC;QAEL,CAAC;QAEL,wBAAC;IAAD,CA/BA,AA+BC,IAAA;IAWD,IAAM,eAAe,GAAqB;QACtC,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,eAAe;QAC1B,MAAM,EAAE,YAAY;KACvB,CAAA;IAED;QAAA;QAOA,CAAC;QAAD,qBAAC;IAAD,CAPA,AAOC,IAAA;IAED,IAAM,OAAO,GAAG;QACZ,QAAQ,EAAE,eAAe;QACzB,WAAW,EAAE,uBAAuB;QACpC,UAAU,EAAE,iBAAiB;KAChC,CAAA;IAED,OAAO;SACF,MAAM,CAAC,YAAY,EAAE,CAAC,cAAc,CAAC,CAAC;SACtC,SAAS,CAAC,YAAY,EAAE,OAAO,CAAC,CAAA;AAEzC,CAAC;;AC3ED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pip-suite-tags.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { ITagDataService, ITagDataProvider } from './ITagDataService';\nimport { PartyTags } from './PartyTags';\nimport { Tag } from './Tag';\n\nclass TagData implements ITagDataService {\n    private RESOURCE: string = 'tags';\n\n    constructor(\n        private pipRest: pip.rest.IRestService,\n        private pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n    }\n\n    public getUserId(): string {\n        let userId: string;\n        userId = this.pipSession.session ? this.pipSession.session.userId : null;\n\n        return userId;\n    }\n\n    public readTags(params: any, successCallback?: (data: PartyTags) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        params.party_id = params.party_id ? params.party_id : this.getUserId();\n        return this.pipRest.getResource(this.RESOURCE).get(params, successCallback, errorCallback);\n    }\n\n    public createTags(params: any, data: any, successCallback?: (item: any) => void, errorCallback?: (error: any) => void): void {\n        params.party_id = params.party_id ? params.party_id : this.getUserId();\n        this.pipRest.getResource(this.RESOURCE).save(params, data, successCallback, errorCallback);\n    }\n\n    public updateTags(params: any, data: any, successCallback?: (item: any) => void, errorCallback?: (error: any) => void): void {\n        params.party_id = params.party_id ? params.party_id : this.getUserId();\n        this.pipRest.getResource(this.RESOURCE).update(params, data, successCallback, errorCallback);\n    }\n\n}\n\nclass TagDataProvider implements ITagDataProvider {\n    private _service: ITagDataService;\n\n    constructor() { }\n\n    public $get(\n        pipRest: pip.rest.IRestService,\n        pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null) {\n            this._service = new TagData(pipRest, pipSession);\n        }\n\n        return this._service;\n    }\n\n}\n\nangular\n    .module('pipTagData', ['pipCommonRest'])\n    .provider('pipTagData', TagDataProvider);\n\n","import './TagDataService';\nimport './ITagDataService';\n\n\nexport * from './ITagDataService';\n\n","import './tag_list/TagList'\nimport './rest/TagResources';\nimport './data';\n\n\nangular.module('pipTags', [\n        'pipTag.Rest',\n        'pipTagData',\n        'pipTagList'\n]);\n\n\nexport * from './data';\n\n\n","function configTagResources(pipRestProvider: pip.rest.IRestProvider) {\n    pipRestProvider.registerResource('tags', '/api/1.0/tags/:party_id',\n        { party_id: '@party_id' },\n        {\n            update: { method: 'PUT' }\n        }\n    );\n}\n\nangular\n    .module('pipTag.Rest', [])\n    .config(configTagResources);\n\n","{\n    interface ITagList {\n        tags: string[];\n        type: string;\n        typeLocal: string;\n    }\n\n    class TagListController implements ITagList {\n        public rebind: string;\n\n        public tags: string[];\n        public type: string;\n        public typeLocal: string;\n\n        constructor(\n            $scope: ng.IScope,\n            $element: ng.IRootElementService\n        ) {\n\n            // Set tags\n            $element.css('display', 'block');\n            $element.addClass('pip-tag-list');\n        }\n\n        private toBoolean(value: string): boolean {\n            if (_.isNull(value) || _.isUndefined(value)) return false;\n            if (!value) return false;\n            value = value.toString().toLowerCase();\n            return value == '1' || value == 'true';\n        }\n\n        public $onChanges(changes: TagListChanges) {\n            if (this.rebind && changes.tags) {\n                this.tags = changes.tags.currentValue;\n            }\n\n        }\n\n    }\n\n    interface ITagListBindings {\n        [key: string]: any;\n\n        tags: any,\n        type: any,\n        typeLocal: any,\n        rebuid: any\n    }\n\n    const TagListBindings: ITagListBindings = {\n        tags: '<pipTags',\n        type: '<pipType',\n        typeLocal: '<pipTypeLocal',\n        rebuid: '<pipRebind'\n    }\n\n    class TagListChanges implements ng.IOnChangesObject, ITagListBindings {\n        [key: string]: ng.IChangesObject<any>;\n\n        tags: ng.IChangesObject<string[]>;\n        type: ng.IChangesObject<string>;\n        typeLocal: ng.IChangesObject<string>;\n        rebuid: ng.IChangesObject<boolean>\n    }\n\n    const TagList = {\n        bindings: TagListBindings,\n        templateUrl: 'tag_list/TagList.html',\n        controller: TagListController\n    }\n\n    angular\n        .module('pipTagList', ['pipTranslate'])\n        .component('pipTagList', TagList)\n\n}","(function(module) {\ntry {\n  module = angular.module('pipTags.Templates');\n} catch (e) {\n  module = angular.module('pipTags.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tag_list/TagList.html',\n    '<div class=\"pip-chip rm4 pip-type-chip pip-type-chip-left {{\\'bg-\\' + $ctrl.type + \\'-chips\\'}}\" ng-if=\"$ctrl.type && !$ctrl.typeLocal\"><span>{{$ctrl.type.toUpperCase() | translate | uppercase}}</span></div><div class=\"pip-chip rm4 pip-type-chip pip-type-chip-left {{\\'bg-\\' + $ctrl.type + \\'-chips\\'}}\" ng-if=\"$ctrl.type && $ctrl.typeLocal\"><span>{{$ctrl.typeLocal.toUpperCase() | translate | uppercase}}</span></div><div class=\"pip-chip rm4\" ng-repeat=\"tag in $ctrl.tags\"><span>{{::tag}}</span></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-suite-tags-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}